# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Push to ECR
        if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'destroy infra')"
        uses: kciter/aws-ecr-action@master
        with:
          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          repo: ${{ secrets.ECR_REPO }}
          region: eu-central-1
          tags: latest,${{ github.sha }}
          create_repo: true
  
  deploy:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    container: 
      image: hemanthkolli/alpine-terraform-bash
      env:
        GIT_USERNAME: ${{secrets.USERNAME}} 
        GIT_PASSWORD: ${{secrets.GIT_PAT}}
        GIT_REMOTE: https://github.com/${{secrets.USERNAME}} /comp-science-quiz-app
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}} 
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        AWS_DEFAULT_REGION: eu-central-1
        
    # Steps represent a sequence of tasks that will be executed as part of the job  
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: git-ci 
        uses: actions/checkout@v2
        
      - name: deploy-action
        if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'destroy infra')"
        id: deploy-action
        env:
          COMMIT_MESSAGE:  Added/Updated Terraform state. ci skip
        run: |
          git config --global url.https://${{ secrets.GIT_PAT }}:@github.com/.insteadOf https://github.com/
          echo "## Deploying with Terraform"
          cd terraform
          terraform init
          terraform apply -auto-approve
          echo "## Commit to instance repo"
          cd ..
          ./pipeline/scripts/git-commit.sh "Pipeline: $COMMIT_MESSAGE"
          git rebase master
          git push


  destroy:
    runs-on: ubuntu-latest
    container: 
      image: hemanthkolli/alpine-terraform-bash
      env:
        GIT_USERNAME: ${{secrets.USERNAME}} 
        GIT_PASSWORD: ${{secrets.GIT_PAT}}
        GIT_REMOTE: https://github.com/${{secrets.USERNAME}} /comp-science-quiz-app
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}} 
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        AWS_DEFAULT_REGION: eu-central-1
        
    # Steps represent a sequence of tasks that will be executed as part of the job  
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: git-ci 
        uses: actions/checkout@v2
        
      - name: destroy-action
        if: "contains(github.event.head_commit.message, 'destroy infra')"
        id: destroy-action
        env:
          COMMIT_MESSAGE:  Removed aws resource. ci skip
        run: |
          git config --global url.https://${{ secrets.GIT_PAT }}:@github.com/.insteadOf https://github.com/
          echo "## Deploying with Terraform"
          cd terraform
          terraform init
          terraform destroy -auto-approve
          echo "## Commit to instance repo"
          cd ..
          ./pipeline/scripts/git-commit.sh "Pipeline: $COMMIT_MESSAGE"
          git rebase master
          git push
